<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1497818020621">{:repl-history {:ide [], :local [&quot;(+ 1 3 4 #_(* 2 3) 5)&quot; &quot;(ns abc)&quot; &quot;(+ 1 2)&quot; &quot;(type :a)&quot; &quot;(type 'a)&quot; &quot;(type (list 1 2 3))&quot; &quot;(type (vector 1 2 3))&quot; &quot;(type [1 2 3])&quot; &quot;(type (1 2 3))&quot; &quot;(type (hash-map :a 1 :b 2 :c 3))&quot; &quot;(type #{1 2 3})&quot; &quot;(apply + 2)&quot; &quot;(apply + [1 2 3])&quot; &quot;(apply / [1 2 3])&quot; &quot;(count [1 2 3])&quot; &quot;(defn avg [numbers]\n  (/ (apply + numbers) (count numbers)))&quot; &quot;(avg [1 2 3 4 5 6 7 8 9])&quot; &quot;(avg [1 2 3 4 5 6 7 8 9 10])&quot; &quot;(apply + [1 2 3 4 5 6 7 8 9 10])&quot; &quot;(/ 55 10)&quot; &quot;(+ 9 3)&quot; &quot;(+ 11 11)&quot; &quot;(print \&quot;vijay\&quot;)&quot; &quot;(print \&quot;vijay\nhhshshhs\&quot;)&quot; &quot;(type \\c)&quot; &quot;(class \\c)&quot; &quot;(hash-map :a 1 :b 2)&quot; &quot;(:a)&quot; &quot;(def anna {:a 1 :b 2})&quot; &quot;(:a anna)&quot; &quot;(list 1 2 3)&quot; &quot;'(1 2 3)&quot; &quot;(= (list 1 2 3) '(1 2 3))&quot; &quot;(def x 1)&quot; &quot;(def x (+ x 1))&quot; &quot;(print x)&quot; &quot;(ns clojureprogrammingbook.core)&quot; &quot;(ns user)&quot; &quot;x&quot; &quot;*ns*&quot; &quot;(quote (+ 1 3))&quot; &quot;( quote (+ 1 3))&quot; &quot;(type (quote 1 2 3))&quot; &quot;(type (quote (+ 1 2 3)))&quot; &quot;(type (+ 1 2 3))&quot;], :remote []}}</component>
</project>